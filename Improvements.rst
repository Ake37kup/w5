Improvements log
================

In this section a table is presented with optimization results in several projections.

Contest test cases display how much gas is used by contest-like methods of test suite, total saved and percentage
as compared to the original commit gas use.

Global gas counters were introduced after commit `Keep your functions close and vars even closer` to make a measurable
metric of "tradeoff" between contest test cases and all other cases, that are totalled by their corresponding test suite.

Only positive (no fail) tests without getters (since there is no point to optimize getters) are included in the table.

This metric proven to be useful, because an `Localize extensions in loop and short-circ simple` commit resulted in very
big jump in savings on the test cases, meanwhile it severly impaired all other cases (GGC increased a lot on it). As a
result, the very next commit `Refactored internal message flows, good GGC value` managed to bring the GGC below the initial
total level, with further commits do a `stable development` of contest test cases with improving GGC as well.

**"Radical" optimizations involving modifying the compiler `Asm.fif` code are outlined in bold.**

+----------------------------------------------------------------+-------------------------------------------+--------------------------------+
| Commit                                                         |               Contest test cases          |       Global gas counters      |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| .____________________________________________________________. | Ext  | Int  | Extn | Total | Save | Perc% | Exter | Inter | Exten | Total  |
+================================================================+======+======+======+=======+======+=======+=======+=======+=======+========+
| *Origin point: INITIAL*                                        | 3235 | 4210 | 2760 | 10250 | 0    | 0.00% | 64038 | 71163 | 38866 | 174067 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Optimized unneccessary cell loads and operations               | 3185 | 4014 | 2744 | 9943  | 262  | 2.56% | 65556 | 70764 | 40304 | 176624 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Removed unneccessary always true check                         | 3185 | 3823 | 2501 | 9509  | 741  | 7.23% | 65504 | 68993 | 38998 | 173495 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Unrolled the common internal handler code                      | 3185 | 3700 | 2373 | 9258  | 992  | 9.68% | 65504 | 67886 | 38204 | 171594 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Implicitly return from the external handler                    | 3165 | 3700 | 2373 | 9238  | 1012 | 9.87% | 65264 | 67886 | 38204 | 171354 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Reaped benefits of separated internal loaders                  | 3165 | 3700 | 2295 | 9160  | 1090 | 10.6% | 65264 | 67886 | 37736 | 170886 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Discarded unneccessary slice remains in dispatcher             | 3155 | 3690 | 2285 | 9130  | 1120 | 10.9% | 65034 | 67716 | 37646 | 170396 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Loaded auth_kind optionally using LDUQ instruction             | 3155 | 3654 | 2249 | 9058  | 1192 | 11.6% | 65050 | 67408 | 37430 | 169888 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Is ifnot a joke for you? (emits less instructions)             | 3155 | 3654 | 2231 | 9040  | 1210 | 11.8% | 65050 | 67408 | 37322 | 169780 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Localize extensions in loop and short-circ simple              | 3045 | 3644 | 2121 | 8810  | 1440 | 14.0% | 69697 | 71316 | 39314 | 180327 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Reordering int msg handlers somehow saves 10 gas               | 3045 | 3567 | 2188 | 8800  | 1450 | 14.1% | 69697 | 70623 | 39716 | 180036 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Moving signature check higher saves some gas                   | 3027 | 3549 | 2188 | 8764  | 1486 | 14.5% | 69481 | 70461 | 39716 | 179658 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Reordering checks somehow sames some more gas                  | 3009 | 3531 | 2188 | 8728  | 1522 | 14.8% | 69265 | 70299 | 39716 | 179280 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Removing end_parse is -gas and +reliability                    | 2983 | 3505 | 2188 | 8676  | 1574 | 15.6% | 68953 | 70065 | 39716 | 178734 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Keep your functions close and vars even closer                 | 2957 | 3505 | 2188 | 8650  | 1600 | 15.6% | 68641 | 70065 | 39716 | 178422 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| < restore extensions var in loop >                             | 3067 | 3533 | 2288 | 8888  |              | 65669 | 67568 | 38456 |        |
+----------------------------------------------------------------+------+------+------+-------+              +-------+-------+-------+        |
| < move complex logic to inline_ref >                           | 2957 | 3423 | 2316 | 8696  |              | 65528 | 67495 | 39148 |        |
+----------------------------------------------------------------+------+------+------+-------+              +-------+-------+-------+        |
| < optimize tail loading of extensions >                        | 2957 | 3423 | 2298 | 8678  |              | 65528 | 67495 | 39040 |        |
+----------------------------------------------------------------+------+------+------+-------+              +-------+-------+-------+        |
| < optimize preference for simple ext ops >                     | 2957 | 3423 | 2248 | 8628  |              | 65528 | 67495 | 39324 |        |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Refactored internal message flows, good GGC value              | 2957 | 3423 | 2248 | 8628  | 1622 | 15.8% | 65528 | 67495 | 39324 | 172347 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| ^^^ This commit finally shows TOTAL GGC less then initial one WHILE providing 15.8% gas save on contest test cases! ^^^                     |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Reorganized inlining point for extension message flow          | 2957 | 3423 | 2230 | 8610  | 1640 | 16.0% | 65528 | 67495 | 38782 | 171805 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Do not carry around params not needed (ext opt)                | 2957 | 3423 | 2176 | 8556  | 1694 | 16.5% | 65176 | 67275 | 38586 | 171037 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Optimize argument order to match stack                         | 2939 | 3405 | 2148 | 8492  | 1758 | 17.2% | 64960 | 67113 | 38346 | 170419 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Swapping extn and sign order back saves some net gas           | 2939 | 3464 | 2063 | 8466  | 1784 | 17.4% | 65004 | 67676 | 37876 | 170556 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Short-circuit optimization of LDUQ with IFNOTRET               | 2939 | 3420 | 2019 | 8378  | 1872 | 18.3% | 64929 | 67205 | 37612 | 169746 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| < short-circuit flags check with asm >                         | 2939 | 3402 | 2001 | 8342  |                                               |
+----------------------------------------------------------------+------+------+------+-------+                                               |
| < short-circuit int msg sign last check with asm >             | 2939 | 3376 | 2001 | 8316  |                                               |
+----------------------------------------------------------------+------+------+------+-------+                                               |
| < short-circuit ext msg sign last check with asm >             | 2913 | 3376 | 2001 | 8290  |                                               |
+----------------------------------------------------------------+------+------+------+-------+                                               |
| < short-circuit extension dictionary check with asm >          | 2913 | 3376 | 1983 | 8272  |                                               |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Short-circuited some returns with asm                          | 2913 | 3376 | 1983 | 8272  | 1978 | 19.3% | 64599 | 66791 | 37373 | 168763 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| ASM-optimized simple action cases                              | 2885 | 3348 | 1981 | 8214  | 2036 | 19.9% | 64470 | 66700 | 37351 | 168521 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Optimized out more unneeded instructions if may RET            | 2885 | 3338 | 1955 | 8178  | 2072 | 20.2% | 64470 | 66610 | 37177 | 168257 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| ^^^ Finally got more than **20%** optimization in test cases! ^^^                                                                           |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Removed another unneccessary DROP with preload uint            | 2875 | 3338 | 1955 | 8168  | 2082 | 20.3% | 64350 | 66610 | 37177 | 168137 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Reordered argument order to optimize stack operations          | 2857 | 3320 | 1955 | 8132  | 2118 | 20.7% | 64134 | 66448 | 37137 | 167719 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Rewritten RETALT to IFNOTJMP - less gas, more reliable         | 2836 | 3299 | 1934 | 8069  | 2181 | 21.3% | 64071 | 66406 | 37220 | 167697 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Another argument stack optimization (psr -> dr call)           | 2818 | 3281 | 1934 | 8033  | 2217 | 21.6% | 64017 | 66370 | 37220 | 167607 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| ^^^ Finally this solution is better then original in **EVERY** test suite branch! The last hurdle - Exter GGC is now less!!! ^^^            |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Black magic route optimization (drop some result later)        | 2818 | 3281 | 1916 | 8015  | 2235 | 21.8% | 64017 | 66370 | 37130 | 167517 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| Another black magic optimization (drop auth_kind later)        | 2818 | 3281 | 1906 | 8005  | 2245 | 21.9% | 64017 | 66370 | 37102 | 167489 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| **Moving recv handlers to entrypoint (root code cell)**        | 2829 | 3123 | 1748 | 7700  | 2550 | 24.9% | 63771 | 64759 | 36154 | 164684 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| **Rearranged entrypoint conditions flow, compiler fix**        | 2826 | 3110 | 1735 | 7671  | 2579 | 25.1% | 63709 | 64629 | 36076 | 164414 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| < some commits not affecting the main test branches >          |                                           | 60135 | 62241 | 33604 | 155980 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| **Removed unneccessary exploded data parameters**              | 2790 | 3074 | 1735 | 7599  | 2651 | 25.9% | 59703 | 61917 | 33604 | 155224 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| **Use SDBEGINS to enforce prefix in external message**         | 2718 | 3074 | 1735 | 7527  | 2723 | 26.7% | 58839 | 61917 | 33604 | 154360 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| **Use SDBEGINSQ to check internal message prefixes**           | 2718 | 2984 | 1647 | 7349  | 2901 | 28.3% | 59045 | 61210 | 33044 | 153299 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+
| *Reminder and origin point: INITIAL*                           | 3235 | 4210 | 2760 | 10250 | 0    | 0.00% | 64038 | 71163 | 38866 | 174067 |
+----------------------------------------------------------------+------+------+------+-------+------+-------+-------+-------+-------+--------+

N.B. Contest multiplier: 9905/10250 = 0.9663 (approximate) -> place multipliers ~ 0.3221138, 0.0966341, 0.048317

Details and rationale
=====================

In this section, details of optimization in each commit are pointed out, sometimes with detailed rationale and reasoning,
when neccessary (in some relatively controversial optimizations).

**TODO: To be filled in!**

Origin point: INITIAL
---------------------

The origin point, the state of the contract when the contest was started. It is used as a basis point to measure further improvements.

Optimized unneccessary cell loads and operations
------------------------------------------------

Removed unneccessary always true check
--------------------------------------

Unrolled the common internal handler code
-----------------------------------------

Implicitly return from the external handler
-------------------------------------------

Reaped benefits of separated internal loaders
---------------------------------------------

Discarded unneccessary slice remains in dispatcher
--------------------------------------------------

Loaded auth_kind optionally using LDUQ instruction
--------------------------------------------------

Is ifnot a joke for you? (emits less instructions)
--------------------------------------------------

Localize extensions in loop and short-circ simple
-------------------------------------------------

Reordering int msg handlers somehow saves 10 gas
------------------------------------------------

Moving signature check higher saves some gas
--------------------------------------------

Reordering checks somehow sames some more gas
---------------------------------------------

Removing end_parse is -gas and +reliability
-------------------------------------------

Keep your functions close and vars even closer
----------------------------------------------

Refactored internal message flows, good GGC value
-------------------------------------------------

restore extensions var in loop
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

move complex logic to inline_ref
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

optimize tail loading of extensions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

optimize preference for simple ext ops
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Reorganized inlining point for extension message flow
-----------------------------------------------------

Do not carry around params not needed (ext opt)
-----------------------------------------------

Optimize argument order to match stack
--------------------------------------

Swapping extn and sign order back saves some net gas
----------------------------------------------------

Short-circuit optimization of LDUQ with IFNOTRET
------------------------------------------------

Short-circuited some returns with asm
-------------------------------------

short-circuit flags check with asm
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

short-circuit int msg sign last check with asm
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

short-circuit ext msg sign last check with asm
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

short-circuit extension dictionary check with asm
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ASM-optimized simple action cases
---------------------------------

Optimized out more unneeded instructions if may RET
---------------------------------------------------

Removed another unneccessary DROP with preload uint
---------------------------------------------------

Reordered argument order to optimize stack operations
-----------------------------------------------------

Rewritten RETALT to IFNOTJMP - less gas, more reliable
------------------------------------------------------

Another argument stack optimization (psr -> dr call)
----------------------------------------------------

Black magic route optimization (drop some result later)
-------------------------------------------------------

Another black magic optimization (drop auth_kind later)
-------------------------------------------------------

Moving recv handlers to entrypoint (root code cell)
---------------------------------------------------

Rearranged entrypoint conditions flow, compiler fix
---------------------------------------------------

some commits not affecting the main test branches
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

